CASE - средства автоматизации разработки ПО

Основными нормативным документом, регламентирующим содержание жизненного цикла ПО, является международный стандарт ISO/IEC 12207:1995
	- ISO - International Organization for Standartization
	- IEC - International Electrotechnical Commision

CASE-средство - это программное инструментально средство, поддерживающее процессы ЖЦ ПО:
	- анализ требований в системе
	- проектирование ПО
	- генерация кода
	- тестирование ПО
	- документирование
	- обеспечение качества
	- управление кофигурацией ПО
	- управление процессом и другие процессы

Среда разработки ПО:
	- CASE-средство
	- системное ПО
	- технические средства

CASE-средство (САПР ПО) = Computer Aided Software Engineering

Класификация CASE-средств (по функциональной ориентации):
	- средства анализа и проектирования
		Строят и анализируют как модели деятельности организации (Пр.О.), так и модели проектируемой системы.
		BPwin
		Rational Rose
	- средства моделирования БД
		Моделируют данные и генерируют схемы баз данных (на языке SQL) для наиболее распространенных СУБД.
		Oracle Designer
		ERwin
	- средства управления требованиями
		Системный анализ разенородных требований к создаваемой системе
		Requisite Pro
	- Средства управления конфигурацией ПО
		ClearCase
	- средства документирования
		Автоматизированное документирование ПО
		SoDA
	- средства тестирования
		Автоматизированное тетирование приложений
		Rational Suite Test Studio
	- средства управления проектом
		Microsoft Project
	- средства реверсного инженеринга
		Предназначены для переноса существующей ПО в новую среду. Анализ программных кодов и схем БД и формирование на их основе различных моделей и проектных спецификация.
		ERwin
		Rational Rose

Внедрение CASE-средств

Процесс внедрения включает следущие этапы:
	- определение потребностей в CASE-средствах
	- оценка и выбор CASE
	- выполнение пилотного проекта
	- практическое внедрение CASE-средства

Не смотря на потенциальные возможности CASE-средств, есть много примеров их неудачного внедрения и они становятся "полочными" ПО

Опыт показал:
	- CASE не обязательно дают немедленный эффект; он может быть получен только спустя какое-то время
	- реальные затраты на внедрение CASE обычно намного превышают затраты на их приобретение
	- CASE обеспечивают возможности для получения существенно выгоды только после успешного завершения процесса их внедрения

Общая характеритика лидера среди CASE-средств Rational Rose
	- RR - семейство обьектно-ориентированных CASE-средств Rational Software Corporation (США). RR предназначена для визуального обьектно-ориентированного проектирования и моделирования систем различного назначения на основе универсального языка моделирования UML
	- RR - автоматически генерирует коды программ на языках: C++, Java, VBasic, Power Builder, CODRA, etc
	- в основе работы RR лежит построение различного рода диаграмм и спецификаций UML, определяющих архитектуру системы, ее статические и динамические аспекты

В составе RR шесть основных компонент:
	- репозиторий (это ОО БД)
	- графический интерфейс пользователя
	- средства просмотра проекта (browser) "навигация" по  проекту, перемещение по иерархиям классов и подсистем и т.д.
	- средства контроля и сбора статистики. Позволяют находить и устранять ошибки по мере развития проекта, а не после его завершения
	- генератор отсетов. Формирует тексты выходных документов
	- генератор кодов (индивидуальный для каждого языка) и анализатор для C++, обеспечивающий реверсный инженеринг

Создаваемый скелет программы может быть уточнен путем промого программирования на C++

В итоге работы над проектом CASE RR формирует следущие документы:
	- диаграммы UML, представляющие собой модель разрабатываемой программы (системы)
	- спецификации классов, обьектов, атрибутов и операций
	- заготовки текстов программ, состав которых определяется либо по умолчанию, либо по усмотрению пользователя. Далее эти заготовки развиваются в полноценные программы

RR существует в следущих вариантах:
	- Modeler Edition (лбеспечивает непосредственную поддержку языка UML)
	- Enterprise Edition (интеграционная платформа для разработки проектов масштаба предприятия)
	- Professional Edition (включает возможности 1-го варианта + генерация кода и реверсный инженеринг)
	- Rational Rose for Unix

Для поддержки командной работы над проектом на каждой стадии ЖЦ ПО имеется интегрированный набор продуктов Rational Rose...



Унифицированный язык моделирования (UML)

Он ориентирован на решение задач первых этапов жизненного цикла программ:
	- анализ предметной области и формулировка требований к программе
	- проектирование структуры программы и ее компонент

Этапы развития UML
	- 1975-1980г.г. - первые языки ОПО
	- 1981-1994г.г - число языков моделирования возросло с 10 до 50

Появились первые графические нотации IDEF0, IDEF1 - как общепринятые стандарты, однако конкуренция продолжалась и получила название "война методов"
С 1994г. наиболее звесными методами ООАП стали:
	- метод Гради Буча (Grady Booch)
	- метод Джеймса Рамбо (James Rumbaugh)
	- метод Айвара Джекобсона (Ivar Jacobson)

1994г. (октябрь) - начало развития языка...

"Три кита" UML:
	- принцип абстрагирования - предписывает включать в модель самые существенные аспекты системы
	- принцип многомодельности - одна мадель не может адекватно описывать различные аспекты сложной системы
	- принцип иерархичности построения моделей
